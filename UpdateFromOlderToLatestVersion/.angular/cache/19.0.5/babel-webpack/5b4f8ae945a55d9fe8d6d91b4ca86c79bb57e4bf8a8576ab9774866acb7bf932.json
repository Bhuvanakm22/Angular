{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let UrlService = /*#__PURE__*/(() => {\n  class UrlService {\n    http;\n    serverUrl = '//localhost:8080';\n    constructor(http) {\n      this.http = http;\n    }\n    // findById(id: number | string): Observable<Url> {\n    //   const urls=`${this.serverUrl}/getById?id=${id}`;\n    //   console.log(urls);\n    //   return this.http.get<Url>(urls)\n    //     .pipe(retry(1),catchError(this.handleError));\n    // }\n    // save(url: string): Observable<Url> {\n    //   const urls=`${this.serverUrl}/save?originalUrl=${url}`;\n    //   console.log(urls);\n    //   return this.http.post<Url>(urls, {})\n    //     .pipe(retry(1),catchError(this.handleError));\n    // }\n    findById(id) {\n      return this.http.get(this.serverUrl + '/getById?id=' + id).pipe(retry(1), catchError(this.handleError));\n    }\n    save(url) {\n      return this.http.post(this.serverUrl + '/save?originalUrl=' + url, {}).pipe(retry(1), catchError(this.handleError));\n    }\n    handleError(error) {\n      const errorMessage = `Error: ${error.error.message}`;\n      window.alert(errorMessage);\n      return throwError(errorMessage);\n    }\n    static ɵfac = function UrlService_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UrlService,\n      factory: UrlService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UrlService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}